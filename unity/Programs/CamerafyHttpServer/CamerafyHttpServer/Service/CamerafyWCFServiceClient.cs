//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8941
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceContract")]
public interface WCFServiceContract {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GetActiveSessionStats", ReplyAction="http://tempuri.org/WCFServiceContract/GetActiveSessionStatsResponse")]
    string GetActiveSessionStats();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GetActiveSessionId", ReplyAction="http://tempuri.org/WCFServiceContract/GetActiveSessionIdResponse")]
    string GetActiveSessionId();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/IsNewUserConnectionsAllowed", ReplyAction="http://tempuri.org/WCFServiceContract/IsNewUserConnectionsAllowedResponse")]
    bool IsNewUserConnectionsAllowed();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GenerateNewUserToken", ReplyAction="http://tempuri.org/WCFServiceContract/GenerateNewUserTokenResponse")]
    string GenerateNewUserToken();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GetUserTokenLifetime", ReplyAction="http://tempuri.org/WCFServiceContract/GetUserTokenLifetimeResponse")]
    double GetUserTokenLifetime();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/ClaimUserToken", ReplyAction="http://tempuri.org/WCFServiceContract/ClaimUserTokenResponse")]
    bool ClaimUserToken(string UserToken);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/CreateNewSessionUser", ReplyAction="http://tempuri.org/WCFServiceContract/CreateNewSessionUserResponse")]
    void CreateNewSessionUser(string UserToken, int UserPrivilegLevel);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GetSignalingServerUrl", ReplyAction="http://tempuri.org/WCFServiceContract/GetSignalingServerUrlResponse")]
    string GetSignalingServerUrl();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WCFServiceContract/GetIceServers", ReplyAction="http://tempuri.org/WCFServiceContract/GetIceServersResponse")]
    string GetIceServers();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface WCFServiceContractChannel : WCFServiceContract, System.ServiceModel.IClientChannel {
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WCFServiceContractClient : System.ServiceModel.ClientBase<WCFServiceContract>, WCFServiceContract {
    
    public WCFServiceContractClient() {
    }
    
    public WCFServiceContractClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public WCFServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public WCFServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public WCFServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress) {
    }
    
    public string GetActiveSessionStats() {
        return base.Channel.GetActiveSessionStats();
    }
    
    public string GetActiveSessionId() {
        return base.Channel.GetActiveSessionId();
    }
    
    public bool IsNewUserConnectionsAllowed() {
        return base.Channel.IsNewUserConnectionsAllowed();
    }
    
    public string GenerateNewUserToken() {
        return base.Channel.GenerateNewUserToken();
    }
    
    public double GetUserTokenLifetime() {
        return base.Channel.GetUserTokenLifetime();
    }
    
    public bool ClaimUserToken(string UserToken) {
        return base.Channel.ClaimUserToken(UserToken);
    }
    
    public void CreateNewSessionUser(string UserToken, int UserPrivilegLevel) {
        base.Channel.CreateNewSessionUser(UserToken, UserPrivilegLevel);
    }
    
    public string GetSignalingServerUrl() {
        return base.Channel.GetSignalingServerUrl();
    }
    
    public string GetIceServers() {
        return base.Channel.GetIceServers();
    }
}

